@model IEnumerable<PerformanceAPI.Models.PredictionSummaryReportModel>

@{
    ViewData["Title"] = "PredictionSummary";
}

<h1>Projections Summary</h1>

<div>
    <form action="ReportsHistory">
        <button type="submit" id="report-button" class="btn btn-dark">Back To History</button>
    </form>
</div>

@if (CurrentUserModel.CurrentReportYear)
{
        double usedBudget = 0;
        int employeesWithProjections = 0;
        foreach (var item in Model)
        {
            usedBudget += (item.CurrentSalary * (item.SalaryIncrease + 1));
            employeesWithProjections++;
        }
        CurrentUserModel.CurrentBudgetUsed = Convert.ToDouble(usedBudget);
        CurrentUserModel.NumberOfEmployeesWithProjections = employeesWithProjections;

        if (CurrentUserModel.CurrentBudge - CurrentUserModel.CurrentBudgetUsed < 0)
        {
            CurrentUserModel.OverBudgetAmount = CurrentUserModel.CurrentBudge - CurrentUserModel.CurrentBudgetUsed;
        }


    <p class="hidden-data" id="current-budget">@CurrentUserModel.CurrentBudge</p>
    <p class="hidden-data" id="used-budget">@CurrentUserModel.CurrentBudgetUsed</p>
    <p class="hidden-data" id="employees-done">@CurrentUserModel.NumberOfEmployeesWithProjections</p>
    <p class="hidden-data" id="employees-total">@CurrentUserModel.NumberOfEmployees</p>


    <table id="predictions-report-charts">
        <tr>
            <td>
                @if (CurrentUserModel.OverBudgetAmount < 0)
                {
                    <h3>You are overbudget by:</h3>
                    <h3>@CurrentUserModel.GetFormattedOverBudgetAmount()</h3>
                }
                else
                {
                    <div id="budget-chart"></div>
                }
            </td>
            <td><div id="projections-chart"></div></td>
        </tr>
    </table>
}
else
{
    <br />
}

<div>
    <table class="table table-striped table-bordered">
        <thead class="thead-dark">
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.EmployeeID)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.FirstName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.MiddleName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.LastName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.ProjectedPR)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.CurrentPosition)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.ProjectedPosition)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.CurrentSalary)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.SalaryIncrease)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Supervisor)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.DateOfProjection)
                </th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
            <tr>
                @if (item.DateOfProjection.Contains(CurrentUserModel.CurrentYear)
                    && item.Supervisor.Equals(CurrentUserModel.CurrentEmployeeID))
                {
                    <td class="maroon-link">
                        @Html.ActionLink(item.EmployeeID + "", "EditProjection", new { id = item.EmployeeID })
                    </td>
                }
                else
                {
                    <td>
                        @Html.DisplayFor(modelItem => item.EmployeeID)
                    </td>
                }
                <td>
                    @Html.DisplayFor(modelItem => item.FirstName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.MiddleName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.LastName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ProjectedPR)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CurrentPosition)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ProjectedPosition)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CurrentSalary)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.SalaryIncrease)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Supervisor)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.DateOfProjection)
                </td>
            </tr>
            }
        </tbody>
    </table>
</div>

<script src="~/js/BudgetPirChart.js"></script>
<script src="~/js/ProjectionsDoneChart.js"></script>