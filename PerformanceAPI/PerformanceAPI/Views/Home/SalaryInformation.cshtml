@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewData["Title"] = "Index";
}

<link href="~/css/Chart.css" rel="stylesheet" />
<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.4.0/Chart.min.js"></script>
<script src="https://canvasjs.com/assets/script/canvasjs.min.js"></script>
<style>

    .divLeftBorder {
        border-left: 1px solid black;
    }

    .divBorderNoTop {
        border: 1px solid black;
        border-top: none;
    }

    .bgGrey {
        background: #DADADA !important;
    }
</style>

<div class="row text-center">
    <div class="col-sm-12">
        <h2>Salary Information</h2>
    </div>
</div>
<hr />

<div class="row">
    <div class="col-md-8 col-sm-12">
        <div class="row text-center divBorderNoTop" style="background:#E05A5A; border:1px solid">
            <div class="col-sm-7">
                Position
            </div>
            <div class="col-sm-5 divLeftBorder">
                Salary Range
            </div>
        </div>
        <div class="row text-center divBorderNoTop bgGrey">
            <div class="col-sm-7">
                CIO
            </div>
            <div class="col-sm-5 divLeftBorder">
                $175,000-$200,000
            </div>
        </div>
        <div class="row text-center divBorderNoTop bgGrey">
            <div class="col-sm-7">
                Director Business Technology
            </div>
            <div class="col-sm-5 divLeftBorder">
                $175,000-$200,000
            </div>
        </div>
        <div class="row text-center divBorderNoTop bgGrey">
            <div class="col-sm-7">
                IS Manager
            </div>
            <div class="col-sm-5 divLeftBorder">
                $175,000-$200,000
            </div>
        </div>
        <div class="row text-center divBorderNoTop bgGrey">
            <div class="col-sm-7">
                Systems Developer (1-5)
            </div>
            <div class="col-sm-5 divLeftBorder">
                $175,000-$200,000
            </div>
        </div>
        <div class="row text-center divBorderNoTop bgGrey">
            <div class="col-sm-7">
                Systems Engineer (1-5)
            </div>
            <div class="col-sm-5 divLeftBorder">
                $175,000-$200,000
            </div>
        </div>
        <div class="row text-center divBorderNoTop bgGrey">
            <div class="col-sm-7">
                Information Security Engineer (1-4)
            </div>
            <div class="col-sm-5 divLeftBorder">
                $175,000-$200,000
            </div>
        </div>
        <div class="row text-center divBorderNoTop bgGrey">
            <div class="col-sm-7">
                Systems Architect
            </div>
            <div class="col-sm-5 divLeftBorder">
                $175,000-$200,000
            </div>
        </div>
        <div class="row text-center divBorderNoTop bgGrey">
            <div class="col-sm-7">
                Senior Systems Architect
            </div>
            <div class="col-sm-5 divLeftBorder">
                $175,000-$200,000
            </div>
        </div>
        <br />
        <br />
        <br />
    </div>
    <div class="col-md-4 col-sm-12 text-right">
        <canvas id="pie-chart-1" width=500 height="400"></canvas>
    </div>
    <div id="chartContainer" style="height: 450px; width: 100%;"></div>
    </div>



<script>

    //added setTime function which waits for chart library to load then it triggers chart related methods.
    setTimeout(function () {
        Chart.defaults.global.legend = { display: false }
        new Chart(document.getElementById("pie-chart-1"), {
            type: 'pie',
            data: {
                labels: ["Expense", "Income"],
                datasets: [{
                    label: "Budget",
                    backgroundColor: ["#E05A5A", "#DADADA"],
                    data: [80, 20]
                }]
            },
            options: {
                title: {
                    display: true,
                    text: 'Annual Budget'
                }
            }
        });
        Chart.defaults.global.legend = { display: false }
        var chart = new CanvasJS.Chart("chartContainer", {
            animationEnabled: true,
            title: {
                text: "Budget Distribution 2019 vs. Budget Distribution 2020"
            },
            axisY: {
                title: "Thousand Dollars/$",
                titleFontColor: "#4F81BC",
                lineColor: "#4F81BC",
                labelFontColor: "#4F81BC",
                tickColor: "#4F81BC"
            },
            axisY2: {
                title: "Thousand Dollars/$",
                titleFontColor: "#C0504E",
                lineColor: "#C0504E",
                labelFontColor: "#C0504E",
                tickColor: "#C0504E"
            },
            toolTip: {
                shared: true
            },
            legend: {
                cursor: "pointer",
                itemclick: toggleDataSeries
            },
            data: [{
                type: "column",
                name: "Budget Distribution 2020/$",
                legendText: "Budget Distribution 2020",
                showInLegend: true,
                dataPoints: [
                    { label: "EC", y: 200.00 },
                    { label: "SC +", y: 200.00 },
                    { label: "SC", y: 200.00 },
                    { label: "SC -", y: 200.00 },
                    { label: "NI", y: 200.00 },
                ]
            },
            {
                type: "column",
                name: "Budget Distribution 2019/$",
                legendText: "Budget Distribution",
                axisYType: "secondary",
                showInLegend: true,
                dataPoints: [
                    { label: "EC", y: 300.00 },
                    { label: "SC +", y: 300.00 },
                    { label: "SC", y: 300.00 },
                    { label: "SC -", y: 300.00 },
                    { label: "NI", y: 300.00 },
                ]
            }]
        });
        chart.render();

        function toggleDataSeries(e) {
            if (typeof (e.dataSeries.visible) === "undefined" || e.dataSeries.visible) {
                e.dataSeries.visible = false;
            }
            else {
                e.dataSeries.visible = true;
            }
            chart.render();
        }

    }, 600);

</script>




