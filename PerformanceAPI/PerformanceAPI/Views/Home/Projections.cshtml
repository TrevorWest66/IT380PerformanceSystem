@model PerformanceAPI.Models.EmployeeListProjectionsModel
@{
    ViewData["Title"] = "Projections";
}
<script src="~/js/Projections.js" type="text/javascript"></script>
<link rel="stylesheet" href="~/css/Projections.css" />


<script>
    function ShowMessage() {
        var result = confirm("Do your want to submit this projection?");
        if (result) {
            return true;
        } else {
            return false;
        }
    }
</script>


<div class="container" style="position: center">
    @using (Html.BeginForm("SaveProjection", "Home", FormMethod.Post))
        
    {
    <span>Employee: </span>
    @Html.DropDownListFor(model => model.EmployeeID, ViewBag.EmployeeList as SelectList, "-- Select Employee --", new { @class = "form-control" })
    <span>Projected Review Rating: </span>
    @Html.TextBoxFor(model => model.projectedReview, new { @class = "form-control", @placeholder = "Rating" } )
    <span>Projected Increase (%): </span>
    @Html.TextBoxFor(model => model.projectedSalaryIncrease, new { @class = "form-control", @placeholder = "i.e. 3.5, 0.5" })
    <span>Projected Position: </span>
    @Html.TextBoxFor(model => model.projectedPosition, new { @class = "form-control", @placeholder = "Position" } )
    <span>Comments: </span>
    @Html.TextAreaFor(model => model.comments, new { @class = "form-control", @placeholder = "500 character max" })

    <input type="submit" value="Submit" class="btn btn-block" onclick="javascript:return ShowMessage();" />
    }


</div>

<div style="display: none;">
    <div>@await Component.InvokeAsync("Positions")</div>
    <img class="salaryimage" src="~/Images/SalaryIncrease.jpg" />
</div>


